{"version":3,"file":"static/js/801.92661642.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import css from '../Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContactThunk, getContactsThunk } from 'redux/thunk/contactThunk';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\n\nexport const AddContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = async event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const normalizeName = name.toLowerCase().trim();\n    const isContact = contacts.find(\n      contact => contact.name.toLowerCase().trim() === normalizeName\n    );\n\n    if (isContact) {\n      alert(`${name} was added earlyer`);\n      return;\n    }\n\n    await dispatch(addContactThunk({ name, number }));\n    await dispatch(getContactsThunk());\n    Notify.success(`Contact ${name} added`);\n    event.target.reset();\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmitForm}\n      className={css.addForm}\n    >\n      <TextField\n        required\n        label=\"Name\"\n        type=\"text\"\n        variant=\"outlined\"\n        name=\"name\"\n        size=\"small\"\n        pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n\n      <TextField\n        required\n        label=\"Number\"\n        type=\"tel\"\n        variant=\"outlined\"\n        name=\"number\"\n        size=\"small\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{ width: '200px', margin: 'auto' }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","import { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from '../Phonebook.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk, getContactsThunk } from 'redux/thunk/contactThunk';\nimport userPhoto from '../../pictures/user.png';\nimport { Button } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Typography } from '@mui/material';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, number, id } = contact;\n\n  const deleteUpdateContacts = async () => {\n    Confirm.show(\n      'DELETE CONTACT',\n      `Do you want to delete contact ${name}?`,\n      'Yes',\n      'No',\n      async () => {\n        await dispatch(deleteContactThunk(id));\n        await dispatch(getContactsThunk());\n        Notify.success(`Contact ${name} deleted`);\n      },\n      async () => {\n        Notify.failure('If you say so...');\n        return;\n      }\n    );\n  };\n\n  return (\n    <li className={css.listItem}>\n      <Grid container spacing={2}>\n        <Grid item xs={3} sm={2} md={2}>\n          <div className={css.avatarWrapper}>\n            <img src={userPhoto} alt=\"avatar\" className={css.avatar} />\n          </div>\n        </Grid>\n        <Grid item xs={7} sm={8} md={8}>\n          <div className={css.contactWrapper}>\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ flexGrow: 1, color: '#4a4849' }}\n            >\n              {name}:\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ flexGrow: 1, color: '#4a4849' }}\n            >\n              {number}\n            </Typography>\n          </div>\n        </Grid>\n        <Grid item xs={2} sm={2} md={2}>\n          <Button\n            color=\"error\"\n            variant=\"outlined\"\n            sx={{ width: '100%' }}\n            onClick={() => dispatch(deleteUpdateContacts)}\n          >\n            Delete\n          </Button>\n        </Grid>\n      </Grid>\n    </li>\n  );\n};\n","import { selectContacts, selectFilter } from 'redux/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport css from '../Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'redux/thunk/contactThunk';\nimport { useEffect } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterContactsInput = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filteredContacts = filterContactsInput();\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        {filteredContacts.length ? (\n          filteredContacts.map(contact => (\n            <Grid item xs={6} sm={6} md={6} key={contact.id}>\n              <ContactItem contact={contact} />\n            </Grid>\n          ))\n        ) : (\n          <p className={css.labelFilter}>No contacts!</p>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n","import { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <TextField\n      value={filter}\n      name=\"filter\"\n      onChange={handleFilter}\n      variant=\"outlined\"\n      label=\"Search contact\"\n      type=\"text\"\n      placeholder=\"Find contact by name\"\n      fullWidth\n      sx={{\n        marginBottom: '60px',\n      }}\n    />\n  );\n};\n","import { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Typography } from '@mui/material';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Typography\n        variant=\"h2\"\n        align=\"center\"\n        component=\"div\"\n        sx={{ flexGrow: 1, color: '#4a4849' }}\n      >\n        Contacts\n      </Typography>\n\n      <AddContactForm />\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        component=\"div\"\n        sx={{ flexGrow: 1, color: '#4a4849', marginTop: '40px' }}\n      >\n        Serch contact\n      </Typography>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["AddContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","handleSubmitForm","event","preventDefault","name","target","elements","value","number","normalizeName","toLowerCase","trim","find","contact","alert","addContactThunk","getContactsThunk","Notify","reset","autoComplete","onSubmit","className","css","TextField","required","label","type","variant","size","pattern","title","Button","sx","width","margin","ContactItem","id","deleteUpdateContacts","Confirm","deleteContactThunk","Grid","container","spacing","item","xs","sm","md","src","alt","Typography","component","flexGrow","color","onClick","ContactList","filter","selectFilter","useEffect","filteredContacts","normalizeFilter","includes","filterContactsInput","Box","length","map","Filter","onChange","setFilter","placeholder","fullWidth","marginBottom","align","marginTop"],"sourceRoot":""}