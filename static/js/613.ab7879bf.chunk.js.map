{"version":3,"file":"static/js/613.ab7879bf.chunk.js","mappings":"yOAKaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,eACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,kBAAMC,SAjBkB,SAAAC,GACxBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBR,GACES,EAAAA,EAAAA,IAAW,CACTC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,WACJb,EAAS,KACTc,EAAAA,OAAAA,QAAA,UACD,GACJ,EAGoCC,aAAa,KAAhD,WACE,sCAEE,kBAAOC,KAAK,QAAQC,KAAK,cAE3B,yCAEE,kBAAOD,KAAK,WAAWC,KAAK,iBAE9B,mBAAQD,KAAK,SAAb,sBAGL,EC3BD,EATkB,WAChB,OACE,4BACE,uCACA,SAACnB,EAAD,MAGL,C","sources":["components/FormLogin/FormLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logInThunk } from 'redux/thunk/authThunk';\n\nexport const FormLogin = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmitLogin = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      logInThunk({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(() => {\n        navigate('/');\n        Notify.success(`Welcome`);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmitLogin} autoComplete=\"on\">\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { FormLogin } from 'components/FormLogin/FormLogin';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <h2>LogInPage</h2>\n      <FormLogin />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormLogin","dispatch","useDispatch","navigate","useNavigate","onSubmit","event","preventDefault","form","currentTarget","logInThunk","email","elements","value","password","unwrap","then","Notify","autoComplete","type","name"],"sourceRoot":""}