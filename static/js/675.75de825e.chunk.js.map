{"version":3,"file":"static/js/675.75de825e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook.module.css?8f1e","components/AddContactForm/AddContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__b90CW\",\"title\":\"Phonebook_title__yyhz0\",\"titleFilter\":\"Phonebook_titleFilter__+Z3jg\",\"addForm\":\"Phonebook_addForm__eI7ti\",\"addContactLabel\":\"Phonebook_addContactLabel__eurs9\",\"addContactInput\":\"Phonebook_addContactInput__+DBgS\",\"addBtn\":\"Phonebook_addBtn__+KjK5\",\"labelFilter\":\"Phonebook_labelFilter__P2Ozl\",\"filterInput\":\"Phonebook_filterInput__6ezt9\",\"listItem\":\"Phonebook_listItem__ORLku\",\"deleteBtn\":\"Phonebook_deleteBtn__os0iu\",\"number\":\"Phonebook_number__fXCJU\",\"labelSerch\":\"Phonebook_labelSerch__X3W4e\",\"spiner\":\"Phonebook_spiner__1HJFu\",\"avatar\":\"Phonebook_avatar__gMC52\",\"listContacts\":\"Phonebook_listContacts__qMYJM\",\"contactWrapper\":\"Phonebook_contactWrapper__HurvW\",\"avatarWrapper\":\"Phonebook_avatarWrapper__kvPgI\"};","import css from '../Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContactThunk, getContactsThunk } from 'redux/thunk/contactThunk';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const AddContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = async event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const normalizeName = name.toLowerCase().trim();\n    const isContact = contacts.find(\n      contact => contact.name.toLowerCase().trim() === normalizeName\n    );\n\n    if (isContact) {\n      alert(`${name} was added earlyer`);\n      return;\n    }\n\n    await dispatch(addContactThunk({ name, number }));\n    await dispatch(getContactsThunk());\n    Notify.success(`Contact ${name} added`);\n    event.target.reset();\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmitForm}\n      className={css.addForm}\n    >\n      <label className={css.addContactLabel}>\n        Name\n        <input\n          className={css.addContactInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.addContactLabel}>\n        Number\n        <input\n          className={css.addContactInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.addBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from '../Phonebook.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk, getContactsThunk } from 'redux/thunk/contactThunk';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, number, id, photo } = contact;\n\n  const deleteUpdateContacts = async () => {\n    Confirm.show(\n      'DELETE CONTACT',\n      `Do you want to delete contact ${name}?`,\n      'Yes',\n      'No',\n      async () => {\n        await dispatch(deleteContactThunk(id));\n        await dispatch(getContactsThunk());\n        Notify.success(`Contact ${name} deleted`);\n      },\n      async () => {\n        Notify.failure('If you say so...');\n        return;\n      }\n    );\n  };\n\n  return (\n    <li className={css.listItem}>\n      <div className={css.avatarWrapper}>\n        <img src={photo} alt=\"avatar\" className={css.avatar} />\n      </div>\n\n      <div className={css.contactWrapper}>\n        <span className={css.contactName}>{name}:</span>\n        <span className={css.number}>{number}</span>\n      </div>\n\n      <button\n        className={css.deleteBtn}\n        onClick={() => dispatch(deleteUpdateContacts)}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n","import { selectContacts, selectFilter } from 'redux/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport css from '../Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'redux/thunk/contactThunk';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterContactsInput = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const filteredContacts = filterContactsInput();\n\n  return (\n    <>\n      {filteredContacts.length ? (\n        <ul className={css.listContacts}>\n          {filteredContacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </ul>\n      ) : (\n        <p className={css.labelFilter}>No contacts!</p>\n      )}\n    </>\n  );\n};\n","import css from '../Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label className={css.labelFilter}>\n      <span className={css.labelSerch}>Serch contact</span>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contact\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n","import { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from '../components/Phonebook.module.css';\n// import { ClockLoader } from 'react-spinners';\n// import { useSelector } from 'react-redux';\n// import { selectError, selectIsLoading } from 'redux/selectors';\n\nconst ContactsPage = () => {\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  return (\n    <>\n      <div>ContactsPage</div>\n      {/* <div className={css.spiner}>\n        {isLoading && !error && <ClockLoader color=\"#8a2be2\" size={60} />}\n      </div> */}\n      <AddContactForm />\n      <h2 className={css.titleFilter}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["AddContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","handleSubmitForm","event","preventDefault","name","target","elements","value","number","normalizeName","toLowerCase","trim","find","contact","alert","addContactThunk","getContactsThunk","Notify","reset","autoComplete","onSubmit","className","css","type","pattern","title","required","ContactItem","id","photo","deleteUpdateContacts","Confirm","deleteContactThunk","src","alt","onClick","ContactList","filter","selectFilter","useEffect","filteredContacts","normalizeFilter","includes","filterContactsInput","length","map","Filter","placeholder","onChange","setFilter"],"sourceRoot":""}